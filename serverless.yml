service: sls-gte-lobby


frameworkVersion: '3'

provider:
  name: aws
  runtime: dotnet6
  profile: sandbox
  region: eu-west-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:*
      Resource: !GetAtt LobbyTable.Arn
    - Effect: Allow
      Action: sqs:*
      Resource: !GetAtt ProcessingQueue.Arn

package:
  artifact: bin/Release/net6.0/deploy-package.zip

functions:
  createLobby:
    handler: Lobby.Lambda::Lambda.Handler::createLobby
    events:
      - http:
          path: lobby/create
          method: post
  createConnection:
    handler: Lobby.Lambda::Lambda.Handler::createConnection
    events:
      - http:
          path: connection/create
          method: post
  deleteLobby:
    handler: Lobby.Lambda::Lambda.Handler::deleteLobby
    events:
      - http:
          path: lobby/delete
          method: post
  getLobby:
    handler: Lobby.Lambda::Lambda.Handler::getLobby
    events:
      - http:
          path: lobby/get
          method: get

  sendMessage:
    handler: Lobby.Lambda::Lambda.Handler::sendMessage
    events:
      - http:
          path: message/send
          method: post
    environment:
      PROCESSING_QUEUE: !Ref ProcessingQueue

  processMessage:
    handler: Lobby.Lambda::Lambda.Handler::processMessage
    events:
      - sqs: 
          arn: !GetAtt ProcessingQueue.Arn
          batchSize: 1

resources:
  Resources:
    LobbyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Lobby-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        AttributeDefinitions:
          - AttributeName: PartitionKey
            AttributeType: S
          - AttributeName: SortKey
            AttributeType: S
        KeySchema:
          - AttributeName: PartitionKey
            KeyType: HASH
          - AttributeName: SortKey
            KeyType: RANGE

    ProcessingQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ProcessingQueue
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt ProcessingDeadLetterQueue.Arn
          maxReceiveCount: 2
    
    ProcessingDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ProcessingDLQ
      